Next step:

- [DONE] Create and upload lambda functions (from s3 buckets for now)
- [DONE] Versioning lambda functions on Updates
- [DONE] Set appropriate permissions for invoking lambda functions from Kinesis


- [DONE] Research Kinesis
  - [DONE] How to publish to Kinesis
  - [DONE] How to invoke lambda functions from Kinesis

- [DONE] Parse YAML file
- [DONE] Parse command line (and give appropriate syntax error)
- [DONE] Logging of the program

- [DONE] Create a workflow
- [DONE] Test the workflow
- [DONE] Track workflow

- REST API
  - [DONE] POST /publish
  - [DONE] GET /track/workflows/<workflow_id>/executions/<execution_id>

- [DONE] Fix all TODOs
- [DONE] Test pub/sub
- Monitor Lambda functions


Using xFlow
===========
Set the aws credentials in ~/.aws/config and ~/.aws/credentials

Testing:
  nosetests -svx tests

Validating config:
  python src/__init__.py examples/wordcount/wordcount.yaml -v

Configuring:
  python src/__init__.py examples/wordcount/wordcount.yaml -c

Publishing:
  python src/__init__.py examples/wordcount/wordcount.yaml \
                    --log-level INFO \
                    -p FileUploaded '{"execution_id":"aaa", "message":"Testing"}'

Server Mode:
  Start server:
    python src/__init__.py examples/wordcount/wordcount.yaml --log-level INFO -s

  Publish:
    curl -XPOST localhost/publish -d '{"stream":"FileUploaded", "event":{"execution_id":"ccc", "message":"Test with ccc"}}'

  Track:
    curl -v localhost/track/workflows/compute_word_count/executions/ccc
